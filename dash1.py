import streamlit as st
import pandas as pd
import zipfile
import io

st.markdown("## üìÇ Cargar base de datos")

uploaded_file = st.file_uploader("Sube tu archivo ZIP con el CSV adentro", type="zip")

@st.cache_data
def load_zip_csv(uploaded_zip, internal_csv_name):
    with zipfile.ZipFile(uploaded_zip) as z:
        with z.open(internal_csv_name) as f:
            df = pd.read_csv(f)
    return df

df = None
if uploaded_file:
    try:
        # Aqu√≠ defines c√≥mo se llama el CSV dentro del ZIP
        df = load_zip_csv(uploaded_file, "DF.csv")
        st.success("‚úÖ ¬°Datos cargados exitosamente!")
        st.dataframe(df.head())
    except Exception as e:
        st.error(f"‚ö†Ô∏è Error al cargar el archivo: {e}")

# Configuraci√≥n de la p√°gina
st.set_page_config(page_title="Dashboard Empresarial", layout="wide", initial_sidebar_state="collapsed")

# Aplicar estilo personalizado con CSS (colores empresariales sobrios)
st.markdown("""
    <style>
        body {
            background-color: #f9f9f9;
            color: #1f1f1f;
        }
        .stTabs [data-baseweb="tab"] {
            font-size: 18px;
            padding: 10px;
            border-bottom: 3px solid transparent;
        }
        .stTabs [aria-selected="true"] {
            border-bottom: 3px solid #004b8d;
            color: #004b8d;
            font-weight: bold;
        }
    </style>
""", unsafe_allow_html=True)

# T√≠tulo general de la app
st.title("üìä Panel Empresarial")

# Crear las tres pesta√±as
tabs = st.tabs(["üè† Dashboard", "üßÆ Calculadora", "üîß Por definir"])

###### Pesta√±a 1: Dashboard
with tabs[0]:
    st.subheader("Vista General de KPIs y Gr√°ficas")

# T√≠tulo de la primera pesta√±a
st.markdown("## üß≠ Visi√≥n General de la Operaci√≥n")

# Secci√≥n 1: KPIs principales
with st.container():
    st.markdown("### üî¢ Indicadores clave")

    col1, col2, col3, col4, col5 = st.columns(5)

    with col1:
        st.metric(label="Total de pedidos", value="...")
    with col2:
        st.metric(label="Entregas a tiempo (%)", value="...")
    with col3:
        st.metric(label="Flete > 50% del producto (%)", value="...")
    with col4:
        st.metric(label="Entregas anticipadas (%)", value="...")
    with col5:
        st.metric(label="Clientes frecuentes", value="...")

# Secci√≥n 2: Gr√°ficas de an√°lisis
with st.container():
    st.markdown("### üìä An√°lisis visual")

    tab1, tab2, tab3 = st.tabs(["Pedidos por A√±o", "Centros de Distribuci√≥n", "Demanda por Estado"])

    with tab1:
        st.write("‚¨ÖÔ∏è Aqu√≠ ir√° la gr√°fica de pedidos por a√±o.")
        # Gr√°fico de pedidos por a√±o

    with tab2:
        st.write("‚¨ÖÔ∏è Aqu√≠ ir√° el treemap o barras de centros de distribuci√≥n.")
        # Gr√°fico de top DC

    with tab3:
        st.write("‚¨ÖÔ∏è Aqu√≠ ir√° la gr√°fica de estados con m√°s entregas.")
        # Gr√°fico por estado

# Secci√≥n 3: Ineficiencias y hallazgos
with st.container():
    st.markdown("### üîç Hallazgos operativos clave")
    st.info("""
    ‚Ä¢ Muchos pedidos llegan antes de tiempo ‚Üí rutas mal optimizadas.  
    ‚Ä¢ Hay d√≠as con camiones medio vac√≠os ‚Üí oportunidad para consolidaci√≥n.  
    ‚Ä¢ Alta proporci√≥n de pedidos con flete muy caro respecto al producto.  
    """)

# Secci√≥n 4: Modelos predictivos
with st.container():
    st.markdown("### ü§ñ Modelos de predicci√≥n")

    col1, col2 = st.columns(2)
    with col1:
        st.success("Modelo de clasificaci√≥n de d√≠as de entrega: Accuracy ~69%, F1 ~68")
    with col2:
        st.success("Modelo de regresi√≥n del flete: R¬≤ ~0.71")

    st.caption("Estos modelos pueden usarse para consolidar entregas, prevenir sobrecostos y predecir el precio antes de la compra.")



#### Pesta√±a 2: Calculadora
with tabs[1]:
    st.subheader("Herramienta de C√°lculo")
    st.warning("Aqu√≠ se incluir√°n funciones interactivas para c√°lculos personalizados.")

#### Pesta√±a 3: Por definir
with tabs[2]:
    st.subheader("Contenido en Desarrollo")
    st.success("Esta secci√≥n est√° en construcci√≥n. Pronto habr√° m√°s.")

